{"version":3,"sources":["managers/collision.ts"],"names":[],"mappings":"AAAA,IAAO,QAAQ,CA+Bd;AA/BD,WAAO,QAAQ,EAAA,CAAC;IACZ,0BAA0B;IAC1B;QAII,mBAAY,MAAqB;YAC7B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAC1B,CAAC;QAEM,4BAAQ,GAAf,UAAgB,UAAyB,EAAE,QAAuB;YAC9D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAC,UAAU,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAC,UAAU,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAE,CAAC;QACrG,CAAC;QAEM,yBAAK,GAAZ,UAAa,MAAyB;YAClC,IAAI,UAAU,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtD,IAAI,QAAQ,GAAmB,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACpD,IAAI,gBAAgB,GAAW,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC;YACzD,IAAI,gBAAgB,GAAW,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YACnD,IAAI,eAAe,GAAY,gBAAgB,GAAG,gBAAgB,CAAC;YAEnE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9B,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9B,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;YAC5B,QAAQ,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;YAE5B,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAC,eAAe,CAAC,CAAA,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC7B,CAAC;QACL,CAAC;QACL,gBAAC;IAAD,CA5BA,AA4BC,IAAA;IA5BY,kBAAS,YA4BrB,CAAA;AACL,CAAC,EA/BM,QAAQ,KAAR,QAAQ,QA+Bd","file":"managers/collision.js","sourcesContent":["module managers{\r\n    // COLLISION MANAGER CLASS\r\n    export class Collision{\r\n        // PRIVATE INSTANCE VARIABLES\r\n        private _player: objects.Player;\r\n        \r\n        constructor(player:objects.Player){\r\n            this._player = player;\r\n        }\r\n        \r\n        public distance(startPoint:createjs.Point, endPoint:createjs.Point):number{\r\n            return Math.sqrt(Math.pow((endPoint.x-startPoint.x),2) + Math.pow((endPoint.y-startPoint.y),2) );\r\n        }\r\n        \r\n        public check(object:objects.GameObject){\r\n            var startPoint: createjs.Point = new createjs.Point();\r\n            var endPoint: createjs.Point = new createjs.Point();\r\n            var playerHalfHeight: number = this._player.height * 0.5;\r\n            var objectHalfHeight: number = object.height * 0.5;\r\n            var minimumDistance : number = playerHalfHeight + objectHalfHeight;\r\n            \r\n            startPoint.x = this._player.x;\r\n            startPoint.y = this._player.y;            \r\n            endPoint.x = object.centerX;\r\n            endPoint.y = object.centerY;\r\n            \r\n            if(this.distance(startPoint, endPoint)<minimumDistance){\r\n                console.log(\"collision\");\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}